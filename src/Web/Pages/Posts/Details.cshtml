@page "{id:guid}"
@using Application.Contracts
@using Application.DTOs
@model Web.Pages.Posts.Details
@inject ICurrentUserService CurrentUser
@{
    ViewData["Title"] = "Post Details";
    var backUrl = Request.Query["returnUrl"].ToString();
}

<div class="container py-4" style="max-width: 600px;">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            
           <!-- Back Button and Post Header -->
           <div class="d-flex align-items-center mb-3 justify-content-between">
               <a href="@(!string.IsNullOrEmpty(backUrl) ? backUrl : "/")"
                  class="btn btn-link text-decoration-none text-dark d-flex align-items-center p-0">
                   <i class="bi bi-arrow-left me-2 fs-5"></i>
                   <span class="fw-bold fs-5">Post</span>
               </a>
               <div class="d-flex align-items-center text-end">
                   <div>
                       <a asp-page="/User/Details" asp-route-id="@Model.Post.Post.AuthorUsername"
                          class="fw-semibold text-decoration-none text-dark">
                           @Model.Post.Post.AuthorUsername
                       </a>
                       <br/>
                       <small class="text-muted">@Model.Post.Post.CreatedAt.ToString("MMM d, yyyy 'at' h:mm tt")</small>
                   </div>
                   <a asp-page="/User/Details" asp-route-id="@Model.Post.Post.AuthorUsername">
                       <img src="@Url.Content("~/" + Model.Post.Post.AuthorAvatarPath)"
                            class="rounded-circle ms-2" width="40" height="40" alt="Avatar"/>
                   </a>
               </div>
           </div>


            <!-- Post Content -->   
            <p class="mb-2">@Model.Post.Post.Content</p>
            
            <hr/>
            
            <!-- Post Stats -->
            <div class="d-flex justify-content-between align-items-center text-muted small fs-5">
                <div class="d-flex align-items-center">
                <auth-only>
                    <div id="likes-@Model.Post.Post.Id"
                         hx-post="/Posts/TogglePostLike?handler=ToggleLike"
                         hx-include="this"
                         hx-target="#likes-@Model.Post.Post.Id"
                         hx-swap="outerHTML">

                        @Html.AntiForgeryToken()
                        <input type="hidden" name="postId" value="@Model.Post.Post.Id"/>
                        <button type="submit" class="btn btn-link p-0 me-3 text-decoration-none fs-5 like-btn @(Model.Post.IsLiked ? "text-pink" : "text-muted")">
                            <i class="bi bi-heart me-1"></i>@Model.Post.LikeCount
                        </button>
                    </div>
                </auth-only>
                <anon-only>
                    <a asp-page="/Account/Login"
                       class="btn btn-link p-0 me-3 text-muted text-decoration-none fs-5 like-btn">
                        <i class="bi bi-heart me-1"></i>@Model.Post.LikeCount
                    </a>
                </anon-only>

                <a asp-page="/Posts/Details" asp-route-id="@Model.Post.Post.Id"
                   class="btn btn-link p-0 me-3 text-muted text-decoration-none fs-5 comment-btn">
                    <i class="bi bi-chat me-1"></i>@Model.Post.CommentCount
                </a>
                <a
                    class="btn btn-link p-0 text-muted text-decoration-none fs-5 view-btn">
                    <i class="bi bi-eye me-1"></i>@Model.Post.ViewCount
                </a>
                </div>
                <!-- Three Dots Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-link p-0 text-muted text-decoration-none fs-5" type="button" id="postOptionsDropdown"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="postOptionsDropdown">
                        <auth-only>
                            @if (CurrentUser.Username == Model.Post.Post.AuthorUsername)
                            {
                                <li>
                                    <form method="post" asp-page-handler="DeletePost" onsubmit="return confirm('Are you sure you want to delete this post?');">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="PostId" value="@Model.Post.Post.Id"/>
                                        <button type="submit" class="dropdown-item text-danger">Delete Post</button>
                                    </form>
                                </li>
                            }
                            else
                            {
                                <li><button class="dropdown-item">Report Post</button></li>
                            }
                        </auth-only>
                        <anon-only>
                            <li><a asp-page="/Account/Login" class="dropdown-item">Log in to report</a></li>
                        </anon-only>
                        <li><button class="dropdown-item">Copy Link</button></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <auth-only>
        <div id="comment-form-wrapper">
            <partial name="_CommentForm" model="new Application.DTOs.CreateCommentViewModel { PostId = Model.Post.Post.Id }" />
        </div>
    </auth-only>
    
    <anon-only>
        <div class="text-center border rounded p-3 bg-light mb-3">
            <a asp-page="/Account/Login" class="btn btn-outline-primary">Log in to comment</a>
        </div>
    </anon-only>
    
    <h5 class="fw-bold mb-3">Comments</h5>
    
    <hr/>
    
    @if(!Model.Comments.Any())
    {
        <div class="alert alert-info">No comments yet. Be the first to comment!</div>
    }
    else
    {
        @foreach (var comment in Model.Comments)
        {
            <div class="card shadow-sm mb-2">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-1">
                        <strong>@comment.AuthorUsername</strong>
                        <small class="text-muted ms-2">@comment.CreatedAt.ToString("MMM d, yyyy 'at' h:mm tt")</small>
                    </div>
                    <p class="mb-0">@comment.Content</p>
                </div>
            </div>
        }
        
        <!-- Pagination -->
        <nav aria-label="Comments pagination">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
    
</div>