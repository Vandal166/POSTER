@page "{id:guid}"
@using Application.Contracts
@model Web.Pages.Comments.Details
@inject ICurrentUserService CurrentUser
@{
    ViewData["Title"] = "Comment Details";
    var returnUrl = string.IsNullOrEmpty(Request.Query["returnUrl"]) ? "/" : Request.Query["returnUrl"].ToString();
}

<div class="container py-4" style="max-width: 600px;">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            
            <!-- Back Button and Comment Header -->
            <div class="d-flex align-items-center mb-3 justify-content-between">
                <a href="@returnUrl"
                   class="btn btn-link text-decoration-none text-dark d-flex align-items-center p-0">
                    <i class="bi bi-arrow-left me-2 fs-5"></i>
                    <span class="fw-bold fs-5">Comment</span>
                </a>
                <div class="d-flex align-items-center text-end">
                    <div>
                        <a asp-page="/Account/Profile" asp-route-identifier="@Model.Comment.Comment.AuthorUsername"
                           class="fw-semibold text-decoration-none text-dark user-profile-link"
                           style="color: inherit">
                            <span class="text-dark">@Model.Comment.Comment.AuthorUsername</span>
                        </a>
                        <br/>
                        <small class="text-muted">@Model.Comment.Comment.CreatedAt.ToString("MMM d, yyyy 'at' h:mm tt")</small>
                    </div>
                    <a asp-page="/Account/Profile" asp-route-identifier="@Model.Comment.Comment.AuthorUsername">
                        <img src="@Url.Content("~/" + Model.Comment.Comment.AuthorAvatarPath)"
                             class="rounded-circle ms-2" width="40" height="40" alt="Avatar"/>
                    </a>
                </div>
            </div>


            <!-- Comment Content -->   
            <p class="mb-2">@Model.Comment.Comment.Content</p>
            
            <hr/>
            
            <!-- Comment Stats -->
            <div class="d-flex justify-content-between align-items-center text-muted small fs-5">
                <div class="d-flex align-items-center">
                    <auth-only>
                        <div id="likes-@Model.Comment.Comment.Id"
                             hx-post="/Comments/ToggleCommentLike?handler=ToggleLike"
                             hx-include="this"
                             hx-target="#likes-@Model.Comment.Comment.Id"
                             hx-swap="outerHTML">

                            @Html.AntiForgeryToken()
                            <input type="hidden" name="commentId" value="@Model.Comment.Comment.Id"/>
                            <button type="submit" class="btn btn-link p-0 me-3 text-decoration-none fs-5 like-btn @(Model.Comment.IsLiked ? "text-pink" : "text-muted")">
                                <i class="bi bi-heart me-1"></i>@Model.Comment.LikeCount
                            </button>
                        </div>
                    </auth-only>
                    
                    <anon-only>
                        <a asp-page="/Account/Login" asp-route-returnUrl="@HttpContext.Request.Path"
                           class="btn btn-link p-0 me-3 text-muted text-decoration-none fs-5 like-btn">
                            <i class="bi bi-heart me-1"></i>@Model.Comment.LikeCount
                        </a>
                    </anon-only>

                    <a asp-page="/Comments/Details" asp-route-id="@Model.Comment.Comment.Id" asp-route-returnUrl="@HttpContext.Request.Path"
                       class="btn btn-link p-0 me-3 text-muted text-decoration-none fs-5 comment-btn">
                        <i class="bi bi-chat me-1"></i>@Model.Comment.CommentCount
                    </a>
                </div>
                <!-- Three Dots Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-link p-0 text-muted text-decoration-none fs-5" type="button" id="commentOptionsDropdown"
                            data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="commentOptionsDropdown">
                        <auth-only>
                            @if (CurrentUser.Username == Model.Comment.Comment.AuthorUsername)
                            {
                                <li>
                                    <button type="button" class="dropdown-item text-danger" onclick="showCommentDeleteModal('@Model.Comment.Comment.Id')">
                                        Delete Comment
                                    </button>
                                </li>
                            }
                            else
                            {
                                <li><button class="dropdown-item">Report Comment</button></li>
                            }
                        </auth-only>
                        <anon-only>
                            <li><a asp-page="/Account/Login" asp-route-returnUrl="@HttpContext.Request.Path" class="dropdown-item">Log in to report</a></li>
                        </anon-only>
                        <li>
                            <button class="dropdown-item" onclick="navigator.clipboard.writeText(window.location.href)">Copy Link</button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <auth-only>
        <div id="comment-form-wrapper">
            <partial name="Shared/Comments/_CommentOnCommentForm" model="new Application.ViewModels.CreateCommentViewModel { EntityId = Model.Comment.PostId, ParentCommentId = Model.Comment.Comment.Id }" />
        </div>
    </auth-only>
    
    <anon-only>
        <div class="text-center border rounded p-3 bg-light mb-3">
            <a asp-page="/Account/Login" asp-route-returnUrl="@HttpContext.Request.Path" class="btn btn-outline-primary">Log in to comment</a>
        </div>
    </anon-only>
    
    <h5 class="fw-bold mb-3">Comments</h5>
    
    <hr/>
    
    @*Initial load of comments(needed)*@
    <div id="comments-container">
        <partial name="Shared/Comments/_CommentListPartial" model="Model.Comments"/>
    </div>

    <div id="loader"
         hx-get="?handler=Paged&id=@(Model.Comment.Comment.Id)&pageNumber=@(Model.CurrentPage + 1)"
         hx-target="this"
         hx-trigger="revealed"
         hx-swap="outerHTML"
         hx-indicator="#loading-indicator">
        
        <div id="loading-indicator">
            @await Html.PartialAsync("Shared/_LoadingIndicatorPartial")
        </div>
        
    </div>
    
</div>

<auth-only>
    <partial name="Shared/Comments/_DeleteCommentFormPartial" />

    <script>
      function showCommentDeleteModal(commentId) {
        document.getElementById('deleteCommentId').value = commentId;
        var modal = new bootstrap.Modal(document.getElementById('deleteCommentModal'));
        modal.show();
      }
    </script>
    
</auth-only>